name: Push Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  push-to-ecr:
    runs-on: [self-hosted]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Assume IAM Role
        run: |
          aws sts assume-role --role-arn arn:aws:iam::868669587970:role/GitHubActionsRunnerRole --role-session-name GitHubActionsSession > assumed-creds.json
          export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' assumed-creds.json)
          export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' assumed-creds.json)
          export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' assumed-creds.json)
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set aws_session_token $AWS_SESSION_TOKEN
        env:
          AWS_REGION: us-east-1

      - name: Build and Push Docker Image
        run: |
          docker build -t Application/application.py:latest .
          $(aws ecr get-login --no-include-email)
          docker tag application.py:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/application.py:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/application.py:latest
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Logout from ECR
        run: |
          docker logout ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
