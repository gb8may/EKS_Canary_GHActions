name: Application Pipeline

on:
  push:
    branches:
      - main

jobs:
  Push-to-ecr:
    runs-on: [self-hosted]
    timeout-minutes: 10

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: ECR Login
        run: |
          aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 868669587970.dkr.ecr.us-east-1.amazonaws.com

      - name: Build and Push Docker Image
        run: |
          sudo docker build -t python-application ./Application/
          sudo docker tag python-application:latest 868669587970.dkr.ecr.us-east-1.amazonaws.com/python-application:latest
          sudo docker push 868669587970.dkr.ecr.us-east-1.amazonaws.com/python-application:latest

  Image-Scanner:
    needs: Push-to-ecr
    runs-on: [self-hosted]
    timeout-minutes: 10

    services:
      docker:
        image: docker:dind
        ports:
          - 2375:2375
        options: --privileged

    steps:
      - name: Scan ECR Images with Trivy
        run: |
          aws ecr get-login-password --region us-east-1 | sudo docker login --username AWS --password-stdin 868669587970.dkr.ecr.us-east-1.amazonaws.com
          images=($(aws ecr describe-repositories --region us-east-1 --repository-names python-application | jq -r '.repositories[].repositoryUri'))
          for image in "${images[@]}"; do
            
          
          done

  Deploy-to-eks:
    needs: Image-Scanner
    runs-on: [self-hosted]
    timeout-minutes: 10
        
    steps:
      - name: Deploy to EKS
        run: |
          kubectl apply -f ./Application/deployment.yaml
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}

      - name: Logout from ECR
        run: |
          sudo docker logout 868669587970.dkr.ecr.us-east-1.amazonaws.com
